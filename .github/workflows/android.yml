name: Android CI

on:
  push:
    tags:
      - 'v*' # Trigger workflow only on tag pushes (e.g., v1.0.0)

jobs:
  build:
    runs-on: self-hosted

    env:
      #JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      # Authenticate Fit
      - name: Authenticate Git
        run: |
          git config --global url."https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/".insteadOf "https://github.com/"
          
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant gradlew permissions
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 35
          build-tools: '35.0.0'
          target: 'android-35'

      # Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug
        env:
          ACTIONS_STEP_DEBUG: true

      # Decode keystore
      - name: Decode keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > keystore-project.jks

      # Build Signed Release APK
      - name: Build Signed Release APK
        run: |
          ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=keystore-project.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

      # Extract package name from AndroidManifest.xml
      - name: Extract Package Name
        id: extract_package_name
        run: |
          PACKAGE_NAME=$(grep 'package=' app/src/main/AndroidManifest.xml | sed -E 's/.*package="([^"]+)".*/\1/')
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      # Rename Debug APK
      - name: Rename Debug APK
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/${{ env.PACKAGE_NAME }}-debug.apk

      # Rename Release APK
      - name: Rename Release APK
        run: |
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/${{ env.PACKAGE_NAME }}-release.apk

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: |
            ## Release Details
            - Built on: ${{ github.event.head_commit.timestamp }}
            - Commit: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      # Upload Renamed Debug APK
      - name: Upload Renamed Debug APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/${{ env.PACKAGE_NAME }}-debug.apk
          asset_name: ${{ env.PACKAGE_NAME }}-debug.apk
          asset_content_type: application/vnd.android.package-archive

      # Upload Renamed Release APK
      - name: Upload Renamed Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/${{ env.PACKAGE_NAME }}-release.apk
          asset_name: ${{ env.PACKAGE_NAME }}-release.apk
          asset_content_type: application/vnd.android.package-archive
